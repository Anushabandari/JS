React vs Angular
Angular using Real DOM where as React uses Virtual Dom which provides better performance
Anglar using typescript where as react uses JSX
Angular was developed by Google where as React is developed by facebook
Angular is a MVC framework where as react is just a UI layer
Learning curve is more in Angular compare to React
Angular has 2-way binding where react is one-way binding
-------------------------------------------------------------------------------------------------
what is virtual DOM? How does it improve the performance? How does it work?
Virtual DOM is an in-memory copy of the actual DOM, the main idea of virtual DOM is instead of updating the actual DOM 
it will first update the virtual DOM and then reflects those changes to the actual DOM which will improve 
the performance, since actual DOM manipulation is expensive.

Whenever we change something(like updating the state variables using setstate) in JSX first virtual DOM is updated and then 
it updates the actual DOM.

React maintains 2 copies of vitual DOM, one is updated virtual DOM and second is pre-updated virtual DOM, so it compares 
both virtual DOMs and calculates the difference and then updates the actual DOM.
Comparing the virtual DOMs objects are faster than the actual DOM.
-------------------------------------------------------------------------------------------------
what is SPA?
  SPA is a single page application. 
  It render part of the application without rendering complete application.
  It uses API calls.
-------------------------------------------------------------------------------------------------
what is React?
React is an opensource frontend javascript library, created by facebook. It is used to create single page applications.
It is used to create reusable components of UI.
----------------------------------------------------------------------------------------------
what are the features of React?
It supports server side rendering.
It uses virtualDOM instead of realDOM , since real dom manipulations are expensive.
It is used to create reusable components of UI.
----------------------------------------------------------------------------------------------------------
what is JSX?
 JSX stands for javascript XML.
 It allows us to write HTML and javascript together in react.
 
--------------------------------------------------------------------------------------------------------
what is a component?
There are two types of component in react, functional component and class component.

functional component-
  It is a stateless component.
  accepts props as an argument to the function.
  It uses javascript functions.
  ex-
   function hello(props){
    return(<div>Hello world {props.name}</div>)
   }
usage- <hello name="anusha" />

class component-
  It is a statefull component.
  It has lifecycle methods.
  
  ex-
  class Hello extends React.Component{
    render(){
      return(<div className="Hello-world">
                <h1>Hi!! {this.props.name} {this.props.jobDesc} </h1>
             </div>
            );
        }
    }
 }
  usage- <Hello name="anusha" jobDesc="IT"/>
   <Hello name="akil" jobDesc="CEO"/>
----------------------------------------------------------------------------------------------------  
what are props?
props are used to pass the data to the component.
Props are read only.
Input to the components are passed as HTML attributes.
-------------------------------------------------------------------------------------------
what is a state?
It is a plain javascript object which is used to manipulate the data within components.

 example
 class Hello extends React.Component{
    constructor(props){
      super(props);
      this.state={
        jobDesc: "softWare developer"
      }
    }
    render(){
      return(<div className="Hello-world">
                <h1>Hi!! {this.props.name} {this.state.jobDesc} </h1>
             </div>
            );
        }
    }
 }
 -------------------------------------------------------------------------------------------------------------------
what is the difference state vs props?
Both are plain javascript objects
Prop- Is used to pass on the input to the component.
      It is read only.
State- It is used to manipulate the data of the component.
       It adds the changes to the data in the component.
-----------------------------------------------------------------------
what are propTypes?
 Prototypes are used to check the type of the props and determine whether they are required/not.
 ex: 
 Hello.propTypes={
  name: propTypes.string.isRequired,
  jobDesc: propTypes.string
 }
----------------------------------------------------------------------------------
what are lifecycles methods?
Each component in react goes through three phases in a life cycle which can be manipulated and monitored, 
they are mounting,updating,unmounting.
-Mounting
    constructor()
    getDerivedStateFromProps()
    render()
    componentDidMount()
    
-Updating
    getDerivedStateFromProps()
    shouldComponentUpdate()
    render()
    getSnapshotBeforeUpdate()
    componentDidUpdate()
    
-Unmounting
    componentWillUnmount()
-------------------------------------------------------------------------------------------------
what are hooks?
To use state in functional components we use hooks
eg:
import React, { useState } from 'react';

function Example() {
  // Declare a new state variable, which we'll call "count"
  const [count, setCount] = useState(0);

  return (
    <div>
      <p>You clicked {count} times</p>
      <button onClick={() => setCount(count + 1)}>
        Click me
      </button>
    </div>
  );
}

------------------------------------------------------------------------------------------------
controlled vs uncontrolled component

controlled component
In a controlled component, form data is handled by a React component. 

uncontrolled component
In uncontrolled components, where form data is handled by the DOM itself.

------------------------------------------------------------------------------------------------
what is react routing?

what is memo?
Whenever the data pass to the functional component is same and if we don't want to re-render the component
then we can use Memo, which improves performance.

Example:
import { memo } from 'React';

const View = memo(({ name }) => `Hi, I'm ${name}`);
https://medium.com/@trekinbami/using-react-memo-and-memoization-1970eb1ed128
------------------------------------------------------------------------------------------------
what is context in react?
Context provides a way to pass data through the components without having to pass props down manually at every level,

example:
const ThemeContext = React.createContext('light');

class App extends React.Component {
  render() {
    // Use a Provider to pass the current theme to the tree below.
    // Any component can read it, no matter how deep it is.
    // In this example, we're passing "dark" as the current value.
    return (
      <ThemeContext.Provider value="dark">
        <Toolbar />
      </ThemeContext.Provider>
    );
  }
}

// A component in the middle doesn't have to
// pass the theme down explicitly anymore.
function Toolbar() {
  return (
    <div>
      <ThemedButton />
    </div>
  );
}

class ThemedButton extends React.Component {
  // Assign a contextType to read the current theme context.
  // React will find the closest theme Provider above and use its value.
  // In this example, the current theme is "dark".
  static contextType = ThemeContext;
  render() {
    return <Button theme={this.context} />;
  }
}

